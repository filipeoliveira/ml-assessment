version: '3'
services:

  backend-app:
    container_name: "mailerlite-b"
    build: 
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./app:/var/www/html
    depends_on:
      - mysql_database
      - redis_cache
    env_file:
      - .env
    environment:
      REDIS_HOST: redis_cache
      MYSQL_HOST: mysql_database
      MYSQL_DBNAME: ${MYSQL_DBNAME}
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 15s
      timeout: 10s
      retries: 3
    networks:
      - frontend
      - backend


  mysql_database:
    container_name: "mysql"
    platform: linux/x86_64
    image: mysql:5.7.32
    ports:
      - "3306:3306"
    volumes:
      - ./app/startup.sql:/docker-entrypoint-initdb.d/startup.sql
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DBNAME}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 15s
      timeout: 10s
      retries: 3
    networks:
      - backend

  redis_cache:
    container_name: "redis"
    image: redis:6.2
    command: redis-server --maxmemory 100mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    networks:
      - backend

  frontend-app:
    container_name: "mailerlite-f"
    build:
      context: ./web
      dockerfile: Dockerfile
    environment:
      - VUE_APP_API_URL=backend-app
    ports:
      - "8085:80"
    depends_on:
      - backend-app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    networks:
      - frontend
  
networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge